// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: TickData.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace TigerOpenAPI.Quote.Pb {

  /// <summary>Holder for reflection information generated from TickData.proto</summary>
  public static partial class TickDataReflection {

    #region Descriptor
    /// <summary>File descriptor for TickData.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static TickDataReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg5UaWNrRGF0YS5wcm90bxI0Y29tLnRpZ2VyYnJva2Vycy5zdG9jay5vcGVu",
            "YXBpLmNsaWVudC5zb2NrZXQuZGF0YS5wYiKAAgoIVGlja0RhdGESDgoGc3lt",
            "Ym9sGAEgASgJElIKBXRpY2tzGAIgAygLMkMuY29tLnRpZ2VyYnJva2Vycy5z",
            "dG9jay5vcGVuYXBpLmNsaWVudC5zb2NrZXQuZGF0YS5wYi5UaWNrRGF0YS5U",
            "aWNrEhEKCXRpbWVzdGFtcBgDIAEoAxIOCgZzb3VyY2UYBCABKAkabQoEVGlj",
            "axIKCgJzbhgBIAEoAxIMCgR0aW1lGAIgASgDEg0KBXByaWNlGAMgASgCEg4K",
            "BnZvbHVtZRgEIAEoBRIMCgR0eXBlGAUgASgJEgwKBGNvbmQYBiABKAkSEAoI",
            "cGFydENvZGUYByABKAlCGKoCFVRpZ2VyT3BlbkFQSS5RdW90ZS5QYmIGcHJv",
            "dG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::TigerOpenAPI.Quote.Pb.TickData), global::TigerOpenAPI.Quote.Pb.TickData.Parser, new[]{ "Symbol", "Ticks", "Timestamp", "Source" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::TigerOpenAPI.Quote.Pb.TickData.Types.Tick), global::TigerOpenAPI.Quote.Pb.TickData.Types.Tick.Parser, new[]{ "Sn", "Time", "Price", "Volume", "Type", "Cond", "PartCode" }, null, null, null, null)})
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class TickData : pb::IMessage<TickData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TickData> _parser = new pb::MessageParser<TickData>(() => new TickData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TickData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TigerOpenAPI.Quote.Pb.TickDataReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TickData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TickData(TickData other) : this() {
      symbol_ = other.symbol_;
      ticks_ = other.ticks_.Clone();
      timestamp_ = other.timestamp_;
      source_ = other.source_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TickData Clone() {
      return new TickData(this);
    }

    /// <summary>Field number for the "symbol" field.</summary>
    public const int SymbolFieldNumber = 1;
    private string symbol_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Symbol {
      get { return symbol_; }
      set {
        symbol_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ticks" field.</summary>
    public const int TicksFieldNumber = 2;
    private static readonly pb::FieldCodec<global::TigerOpenAPI.Quote.Pb.TickData.Types.Tick> _repeated_ticks_codec
        = pb::FieldCodec.ForMessage(18, global::TigerOpenAPI.Quote.Pb.TickData.Types.Tick.Parser);
    private readonly pbc::RepeatedField<global::TigerOpenAPI.Quote.Pb.TickData.Types.Tick> ticks_ = new pbc::RepeatedField<global::TigerOpenAPI.Quote.Pb.TickData.Types.Tick>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::TigerOpenAPI.Quote.Pb.TickData.Types.Tick> Ticks {
      get { return ticks_; }
    }

    /// <summary>Field number for the "timestamp" field.</summary>
    public const int TimestampFieldNumber = 3;
    private long timestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Timestamp {
      get { return timestamp_; }
      set {
        timestamp_ = value;
      }
    }

    /// <summary>Field number for the "source" field.</summary>
    public const int SourceFieldNumber = 4;
    private string source_ = "";
    /// <summary>
    /// data source (Optional)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Source {
      get { return source_; }
      set {
        source_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TickData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TickData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Symbol != other.Symbol) return false;
      if(!ticks_.Equals(other.ticks_)) return false;
      if (Timestamp != other.Timestamp) return false;
      if (Source != other.Source) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Symbol.Length != 0) hash ^= Symbol.GetHashCode();
      hash ^= ticks_.GetHashCode();
      if (Timestamp != 0L) hash ^= Timestamp.GetHashCode();
      if (Source.Length != 0) hash ^= Source.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Symbol.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Symbol);
      }
      ticks_.WriteTo(output, _repeated_ticks_codec);
      if (Timestamp != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(Timestamp);
      }
      if (Source.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Source);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Symbol.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Symbol);
      }
      ticks_.WriteTo(ref output, _repeated_ticks_codec);
      if (Timestamp != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(Timestamp);
      }
      if (Source.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Source);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Symbol.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Symbol);
      }
      size += ticks_.CalculateSize(_repeated_ticks_codec);
      if (Timestamp != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Timestamp);
      }
      if (Source.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Source);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TickData other) {
      if (other == null) {
        return;
      }
      if (other.Symbol.Length != 0) {
        Symbol = other.Symbol;
      }
      ticks_.Add(other.ticks_);
      if (other.Timestamp != 0L) {
        Timestamp = other.Timestamp;
      }
      if (other.Source.Length != 0) {
        Source = other.Source;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Symbol = input.ReadString();
            break;
          }
          case 18: {
            ticks_.AddEntriesFrom(input, _repeated_ticks_codec);
            break;
          }
          case 24: {
            Timestamp = input.ReadInt64();
            break;
          }
          case 34: {
            Source = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Symbol = input.ReadString();
            break;
          }
          case 18: {
            ticks_.AddEntriesFrom(ref input, _repeated_ticks_codec);
            break;
          }
          case 24: {
            Timestamp = input.ReadInt64();
            break;
          }
          case 34: {
            Source = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the TickData message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public sealed partial class Tick : pb::IMessage<Tick>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Tick> _parser = new pb::MessageParser<Tick>(() => new Tick());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<Tick> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::TigerOpenAPI.Quote.Pb.TickData.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Tick() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Tick(Tick other) : this() {
          sn_ = other.sn_;
          time_ = other.time_;
          price_ = other.price_;
          volume_ = other.volume_;
          type_ = other.type_;
          cond_ = other.cond_;
          partCode_ = other.partCode_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Tick Clone() {
          return new Tick(this);
        }

        /// <summary>Field number for the "sn" field.</summary>
        public const int SnFieldNumber = 1;
        private long sn_;
        /// <summary>
        /// The order in which upstream data arrives, for reference only.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public long Sn {
          get { return sn_; }
          set {
            sn_ = value;
          }
        }

        /// <summary>Field number for the "time" field.</summary>
        public const int TimeFieldNumber = 2;
        private long time_;
        /// <summary>
        /// Execution time of transaction. 13位的时间戳
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public long Time {
          get { return time_; }
          set {
            time_ = value;
          }
        }

        /// <summary>Field number for the "price" field.</summary>
        public const int PriceFieldNumber = 3;
        private float price_;
        /// <summary>
        /// Transaction price.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public float Price {
          get { return price_; }
          set {
            price_ = value;
          }
        }

        /// <summary>Field number for the "volume" field.</summary>
        public const int VolumeFieldNumber = 4;
        private int volume_;
        /// <summary>
        /// Transaction volume.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int Volume {
          get { return volume_; }
          set {
            volume_ = value;
          }
        }

        /// <summary>Field number for the "type" field.</summary>
        public const int TypeFieldNumber = 5;
        private string type_ = "";
        /// <summary>
        /// buy/sell direction. Active buy(+); Active sell(-); Neutral transaction(*)
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string Type {
          get { return type_; }
          set {
            type_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "cond" field.</summary>
        public const int CondFieldNumber = 6;
        private string cond_ = "";
        /// <summary>
        /// The trade condition for irregular transaction. (Optional)
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string Cond {
          get { return cond_; }
          set {
            cond_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "partCode" field.</summary>
        public const int PartCodeFieldNumber = 7;
        private string partCode_ = "";
        /// <summary>
        /// The market participant reports the transaction. (Optional)
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string PartCode {
          get { return partCode_; }
          set {
            partCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as Tick);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(Tick other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Sn != other.Sn) return false;
          if (Time != other.Time) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Price, other.Price)) return false;
          if (Volume != other.Volume) return false;
          if (Type != other.Type) return false;
          if (Cond != other.Cond) return false;
          if (PartCode != other.PartCode) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (Sn != 0L) hash ^= Sn.GetHashCode();
          if (Time != 0L) hash ^= Time.GetHashCode();
          if (Price != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Price);
          if (Volume != 0) hash ^= Volume.GetHashCode();
          if (Type.Length != 0) hash ^= Type.GetHashCode();
          if (Cond.Length != 0) hash ^= Cond.GetHashCode();
          if (PartCode.Length != 0) hash ^= PartCode.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (Sn != 0L) {
            output.WriteRawTag(8);
            output.WriteInt64(Sn);
          }
          if (Time != 0L) {
            output.WriteRawTag(16);
            output.WriteInt64(Time);
          }
          if (Price != 0F) {
            output.WriteRawTag(29);
            output.WriteFloat(Price);
          }
          if (Volume != 0) {
            output.WriteRawTag(32);
            output.WriteInt32(Volume);
          }
          if (Type.Length != 0) {
            output.WriteRawTag(42);
            output.WriteString(Type);
          }
          if (Cond.Length != 0) {
            output.WriteRawTag(50);
            output.WriteString(Cond);
          }
          if (PartCode.Length != 0) {
            output.WriteRawTag(58);
            output.WriteString(PartCode);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (Sn != 0L) {
            output.WriteRawTag(8);
            output.WriteInt64(Sn);
          }
          if (Time != 0L) {
            output.WriteRawTag(16);
            output.WriteInt64(Time);
          }
          if (Price != 0F) {
            output.WriteRawTag(29);
            output.WriteFloat(Price);
          }
          if (Volume != 0) {
            output.WriteRawTag(32);
            output.WriteInt32(Volume);
          }
          if (Type.Length != 0) {
            output.WriteRawTag(42);
            output.WriteString(Type);
          }
          if (Cond.Length != 0) {
            output.WriteRawTag(50);
            output.WriteString(Cond);
          }
          if (PartCode.Length != 0) {
            output.WriteRawTag(58);
            output.WriteString(PartCode);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (Sn != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(Sn);
          }
          if (Time != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(Time);
          }
          if (Price != 0F) {
            size += 1 + 4;
          }
          if (Volume != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(Volume);
          }
          if (Type.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Type);
          }
          if (Cond.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Cond);
          }
          if (PartCode.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(PartCode);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(Tick other) {
          if (other == null) {
            return;
          }
          if (other.Sn != 0L) {
            Sn = other.Sn;
          }
          if (other.Time != 0L) {
            Time = other.Time;
          }
          if (other.Price != 0F) {
            Price = other.Price;
          }
          if (other.Volume != 0) {
            Volume = other.Volume;
          }
          if (other.Type.Length != 0) {
            Type = other.Type;
          }
          if (other.Cond.Length != 0) {
            Cond = other.Cond;
          }
          if (other.PartCode.Length != 0) {
            PartCode = other.PartCode;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                Sn = input.ReadInt64();
                break;
              }
              case 16: {
                Time = input.ReadInt64();
                break;
              }
              case 29: {
                Price = input.ReadFloat();
                break;
              }
              case 32: {
                Volume = input.ReadInt32();
                break;
              }
              case 42: {
                Type = input.ReadString();
                break;
              }
              case 50: {
                Cond = input.ReadString();
                break;
              }
              case 58: {
                PartCode = input.ReadString();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                Sn = input.ReadInt64();
                break;
              }
              case 16: {
                Time = input.ReadInt64();
                break;
              }
              case 29: {
                Price = input.ReadFloat();
                break;
              }
              case 32: {
                Volume = input.ReadInt32();
                break;
              }
              case 42: {
                Type = input.ReadString();
                break;
              }
              case 50: {
                Cond = input.ReadString();
                break;
              }
              case 58: {
                PartCode = input.ReadString();
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
